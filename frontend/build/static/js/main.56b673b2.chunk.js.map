{"version":3,"sources":["store/actions/errorActions.js","store/actions/actionTypes.js","store/actions/postActions.js","components/SignOut.js","store/actions/authActions.js","components/NavBar.js","components/LoginForm.js","components/SignUpForm.js","components/SignUpLandingLayout.js","components/Home.js","components/ModalBackground.js","components/NewPostModal.js","components/UpdateModal.js","components/PostTable.js","components/Posts.js","store/actions/commentActions.js","components/Carousel.js","components/About.js","components/VerificationPage/VerificationStatus.js","routers/PrivateRoute.js","routers/HomeRoute.js","routers/Routers.js","App.js","serviceWorker.js","store/reducers/errorReducer.js","store/reducers/authReducer.js","store/reducers/postReducer.js","index.js","images/image.jpg","images/OnTheHouseLogo.png"],"names":["returnErrors","msg","status","id","type","payload","updatePost","postId","userToken","title","description","community","price","dispatch","config","headers","crossDomain","Authorization","body","JSON","stringify","axios","patch","then","res","data","catch","err","deletePost","delete","SignOut","NavLink","onClick","this","props","handleLogoutUser","tag","Link","to","Component","connect","state","handleClearErrors","NavBar","isOpen","dropdownOpen","color","toggle","setState","listenScrollEvent","e","window","scrollY","addEventListener","auth","isAuthenticated","user","userLinks","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","className","DropdownItem","email","split","guestLinks","NavItem","Navbar","NavbarBrand","src","Logo","NavbarToggler","Collapse","navbar","Nav","LoginForm","password","onChange","target","name","value","onSubmit","preventDefault","handleLoginUser","prevProps","error","userObject","verified","history","push","length","Container","Col","md","Alert","Form","FormGroup","row","Input","placeholder","passwordErrorBorder","Button","xs","authAction","post","response","actionMethods","SignUpForm","firstName","lastName","DOB","dobErrorBorder","dobErrorMessage","emailErrorBorder","emailErrorMessage","passwordErrorMessage","onChangeDate","d","Date","valid","validateCases","newUser","handleRegisterUser","undefined","toLowerCase","includes","test","getFullYear","submitButtonEnable","requiredFieldsFilled","Label","for","max","disabled","action","SignUpLandingLayout","Row","showVerificationWarning","handleOnClickShowVerifyMessage","style","fontWeight","fontSize","marginBottom","Home","showVerifyMessge","bypassVerify","handleOnClickBypassVerify","ModalBackground","data-keyboard","NewPostModal","children","canCancel","handleCancel","canConfirm","handleDisabled","handleClickPost","UpdatePostModal","PostTable","posts","showInvalidPriceWarning","errmsg","showPostModal","showUpdateModal","priceOnChange","Number","handleNewPostOnClick","handleCancelButton","handlePostButton","newPostObject","handleCreateNewPost","token","handleUpdatePostOnClick","handleUpdateCancelButton","handleUpdateButton","handleUpdatePost","postID","filter","item","_id","PostsToState","sort","a","b","updatedAt","createPostButtonEnable","Fragment","htmlFor","min","step","rows","defaultValue","map","Media","key","left","object","image","alt","handleaddPostData","getPostData","heading","textDecoration","format","$numberDecimal","confirm","handleDeletePost","updatePosts","postContent","postData","theNewPost","localToken","theUpdatedPost","currPost","Posts","comments","content","handleCommentButton","createNewComment","get","CommentsToState","fluid","sm","fromNow","Table","responsive","borderless","variant","index","author","icon","faEllipsisV","deleteComment","maxLength","currUser","commentId","console","log","comment","items","altText","caption","Example","useState","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","previous","slides","CarouselItem","onExiting","onExited","CarouselCaption","captionText","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","About","VerificationStatus","tokenToRequest","location","search","handleVerify","verifiedRedirect","marginTop","tokenToConfirm","redirect","component","rest","render","pathname","AllRouters","redirectToPostTable","exact","path","App","store","getState","Boolean","hostname","match","initialState","localStorage","getItem","isLoading","defaults","baseURL","middleWare","thunk","allReducers","combineReducers","setItem","removeItem","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.56b673b2.chunk.js","sourcesContent":["import {GET_ERRORS, CLEAR_ERRORS } from './actionTypes';\n\n\n//RETURN ERRORS\nexport const returnErrors = (msg, status, id=null) => {\n    return {\n        type: GET_ERRORS,\n        payload: { msg, status, id }\n    };\n};\n\n//CLEAR ERRORS\nexport const clearErrors = () => {\n    return {\n        type: CLEAR_ERRORS\n    };\n};","\n//Auth actions\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const VERIFICATION_SUCCESS = 'VERIFICATION_SUCCESS';\nexport const USER_CONFIRMED_VERIFICATION = 'USER_CONFIRMED_VERIFICATION';\nexport const USER_DISMISSED_VERIFICATION_WARNING ='USER_DISMISSED_VERIFICATION_WARNING';\n\n//Error actions\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n\n//Post actions\nexport const ADD_POST_DATA = 'ADD_POST_DATA';\nexport const NEW_POST_SUCCESS = 'NEW_POST_SUCCESS';\nexport const NEW_POST_FAIL = 'NEW_POST_FAIL';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAIL = 'UPDATE_POST_FAIL';\n\n//Comment actions\nexport const NEW_COMMENT_SUCCESS = 'NEW_COMMENT_SUCCESS';\nexport const NEW_COMMENT_FAIL = 'NEW_COMMENT_FAIL';","import  {ADD_POST_DATA,\n  NEW_POST_SUCCESS,\n  NEW_POST_FAIL,\n  UPDATE_POST_SUCCESS,\n  UPDATE_POST_FAIL} from './actionTypes';\nimport axios from 'axios';\n\nexport const addPostData = (postData) => dispatch => {\ndispatch({type: ADD_POST_DATA, postData});\n}\n\nexport const updatePost =  ({ title, description, community, price }, postId, userToken) => dispatch => {\n  const config = {\n    headers: {\n        \"Content-type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        crossDomain: true,\n        Authorization: `Bearer ${userToken}`\n      }\n  };\n  let body = JSON.stringify({title, description, community, price });\n\n  axios.patch(`/posts/${postId}`, body, config)\n  .then(res => {\n    dispatch({\n      type: UPDATE_POST_SUCCESS,\n      payload: res.data});\n    \n  })\n  .catch( err => {\n    dispatch( {type: UPDATE_POST_FAIL} )\n  })\n}\n\nexport const deletePost = (postId, userToken) => dispatch => {\n  const config = {\n    headers: {\n        \"Content-type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        crossDomain: true,\n        Authorization: `Bearer ${userToken}`\n      }\n  };\n  axios.delete(`/posts/${postId}`, config)\n  .then(res => {\n  })\n}\n\n//Create new post\nexport const createNewPost = ( { title, description, community, price }, userToken) => dispatch => {\nconst config = {\n  headers: {\n      \"Content-type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      crossDomain: true,\n      Authorization: `Bearer ${userToken}`\n    }\n};\n\n//Request Body\nlet body = JSON.stringify({title, description, community, price });\n\naxios.post('/posts', body, config)\n.then(res => {\n\n  dispatch({\n      type: NEW_POST_SUCCESS,\n      payload: res.data\n  })\n})\n.catch( err => {\n  dispatch( {type: NEW_POST_FAIL} )\n})\n}","import React, { Component } from \"react\";\nimport \"./SignOut.css\";\nimport * as actionMethods from '../store/actions/index';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { NavLink } from \"reactstrap\";\n\nexport class SignOut extends Component {\n\n  render() {\n    return (\n      <NavLink\n        id=\"userLoggedInButton\"\n        onClick={this.props.handleLogoutUser}\n        tag={Link}\n        to=\"/\"\n      >\n        Sign Out\n      </NavLink>\n    );\n  }\n}\n\nconst mapStatetoProps = state => ({\n  // TEMPLATE\n  // propYouWantInserted : state.ItemName,\n});\n\nconst mapDispatchToProps = dispatch => {\n  // TEMPLATE\n  // dispatchName: Parameter =>\n  //   dispatch({ type: \"ActionName\", Parameter }),\n  return {\n    handleLogoutUser: () => dispatch(actionMethods.logout()),\n    handleClearErrors: () => dispatch(actionMethods.clearErrors())\n  }\n};\n\nexport default connect(\n  mapStatetoProps,\n  mapDispatchToProps\n)(SignOut);\n","import axios from \"axios\";\nimport {\n  USER_LOADING,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  VERIFICATION_SUCCESS\n} from \"./actionTypes\";\nimport { returnErrors } from \"./errorActions\";\n\nexport const loadUser = () => (dispatch, getState) => {\n  //User loading\n  dispatch({ type: USER_LOADING });\n};\n\n//Register the user\nexport const register = ({\n  firstName,\n  lastName,\n  DOB,\n  email,\n  password\n}) => dispatch => {\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      crossDomain: true\n    }\n  };\n\n  //Request Body\n  const body = JSON.stringify({ firstName, lastName, DOB, email, password });\n\n  axios\n    .post(\"/users\", body, config)\n    .then(res => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\")\n      );\n      dispatch({ type: REGISTER_FAIL });\n    });\n};\n\n//User Login\nexport const login = ({ email, password }) => dispatch => {\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      crossDomain: true\n    }\n  };\n\n  //Request Body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post(\"/users/login\", body, config)\n    .then(res => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\")\n      );\n      dispatch({ type: LOGIN_FAIL });\n    });\n};\n\n//User Logout\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\n//Check verification status of user\nexport const verify = userToken => dispatch => {\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      crossDomain: true,\n      Authorization: userToken\n    }\n  };\n\n  //Request Body\n  const body = JSON.stringify({});\n  axios\n    .post(\"/users/verify\", body, config)\n    .then(res => {\n      dispatch({\n        type: VERIFICATION_SUCCESS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n    });\n};\n\nexport const tokenConfig = getState => {\n  // Get token\n  const token = getState().auth.token;\n\n  //Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      crossDomain: true\n    }\n  };\n\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n  return config;\n};\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport \"./NavBar.css\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport SignOut from \"./SignOut\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../images/OnTheHouseLogo.png\";\n\n//Reactstrap implementation.  Can switch off to either props or class component depending on dynamic content.\nclass NavBar extends Component {\n  state = {\n    isOpen: false,\n    dropdownOpen: false,\n    color: \"\"\n  };\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n\n  toggle = () =>\n    this.setState({\n      isOpen: !this.state.isOpen,\n      dropdownOpen: !this.state.dropdownOpen\n    });\n\n  listenScrollEvent = e => {\n    if (window.scrollY > 50) {\n      this.setState({ color: \"color-transition-nav\" });\n    } else {\n      this.setState({ color: \"transparent-nav\" });\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.listenScrollEvent);\n  }\n\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    //If user is logged in, their name will show up.\n    const userLinks = (\n      <Fragment>\n        <div id=\"usrName\">\n          <UncontrolledDropdown nav inNavbar>\n            <DropdownToggle nav caret>\n              <span id=\"signedInDropdown\">My Account</span>\n            </DropdownToggle>\n            <DropdownMenu className=\"Dropdown\">\n              <DropdownItem className=\"dropdown-menu-right\" id=\"user\">\n                User:{\" \"}\n                <span id=\"dynamicUserGreeting\">\n                  {user ? `${user.email.split('@')[0]}` : ``}\n                </span>\n              </DropdownItem>\n              <DropdownItem className=\"dropdown-menu-right\">\n                <SignOut></SignOut>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </div>\n      </Fragment>\n    );\n\n    //Guests who visit OnTheHouse will only see a sign up/sign in button.\n    const guestLinks = (\n      <Fragment>\n        <NavItem>\n          <NavLink id=\"signInButton\" tag={Link} to=\"/users/login\">\n            Sign In\n          </NavLink>\n        </NavItem>\n      </Fragment>\n    );\n\n    return (\n      <div>\n        <Navbar\n          className={`navbar navbar-expand-lg navbar-light fixed-top ${this.state.color}`}\n        >\n          <NavbarBrand tag={Link} to=\"/\">\n            <img className=\"Logo\" src={Logo}></img>\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-icon\"></span>\n          </NavbarToggler>\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"mr-auto mt-2 mt-lg-0\" navbar>\n              <NavItem className=\"active\">\n                <NavLink className=\"nl\" tag={Link} to=\"/\">\n                  Home\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink tag={Link} to=\"/About\">\n                  About\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink tag={Link} to=\"/posttable\">\n                  Posts\n                </NavLink>\n              </NavItem>\n              {isAuthenticated ? userLinks : guestLinks}\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  // TEMPLATE\n  // propYouWantInserted : state.ItemName,\n  auth: state.auth\n});\n\nconst mapDispatchToProps = state => ({\n  // TEMPLATE\n  // dispatchName: Parameter =>\n  //   dispatch({ type: \"ActionName\", Parameter }),\n});\n\nexport default connect(\n  mapStateToProps\n  // mapDispatchToProps\n)(NavBar);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionMethods from \"../store/actions/index\";\nimport \"./LoginForm.css\";\nimport {\n  Form,\n  FormGroup,\n  Input,\n  Container,\n  Col,\n  Button,\n  Alert\n} from \"reactstrap\";\n\nclass LoginForm extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    msg: null\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n\n    //If user authenticated, redirect to posts page.  Else, keep the user at the home page.\n    if (isAuthenticated && this.props.userObject.verified) {\n      const { history } = this.props;\n      history.push(\"/posttable\");\n    } else if (isAuthenticated) {\n      const { history } = this.props;\n      history.push(\"/\");\n    }\n  }\n\n  //Checks if all required fields have inputs. If so, then the submit button will be enabled.\n  requiredFieldsFilled() {\n    const { email, password } = this.state;\n    return email.length > 0 && password.length > 0;\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    //Set Error message to null.\n    this.props.handleClearErrors();\n\n    //Check if user inputs are valid\n    const { email, password } = this.state;\n    const user = {\n      email,\n      password\n    };\n    //Call login action\n    this.props.handleLoginUser(user);\n  };\n\n  render() {\n    // const submitButtonEnable = this.requiredFieldsFilled();\n    return (\n      <div id=\"pageBackground\">\n        <div className=\"styles\">\n          <Container>\n            <div className=\"row\">\n              <Col md=\"4\"></Col>\n              <Col md=\"4\" id=\"loginCol\">\n                <h1 id=\"signInHeader\">Sign in</h1>\n                {this.state.msg ? (\n                  <Alert color=\"danger\">{this.state.msg}</Alert>\n                ) : null}\n                <Form onSubmit={this.onSubmit} id=\"formSubmit\">\n                  <FormGroup row>\n                    <Col>\n                      <Input\n                        type=\"email\"\n                        name=\"email\"\n                        id=\"uciEmail\"\n                        onChange={this.onChange}\n                        placeholder=\"UCI email\"\n                      />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup row>\n                    <Col>\n                      <Input\n                        className={this.state.passwordErrorBorder}\n                        type=\"password\"\n                        name=\"password\"\n                        id=\"userPassword\"\n                        onChange={this.onChange}\n                        placeholder=\"Password\"\n                      />\n                    </Col>\n                  </FormGroup>\n                  <Button type=\"submit\" className=\"login\">\n                    Login\n                  </Button>\n                </Form>\n              </Col>\n              <Col xs=\"4\"></Col>\n            </div>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = state => ({\n  authAction: state.auth,\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n  userObject: state.auth.user\n});\n\nconst mapDispatchToProps = dispatch => {\n  {\n    return {\n      handleLoginUser: user => dispatch(actionMethods.login(user)),\n      handleClearErrors: () => dispatch(actionMethods.clearErrors())\n    };\n  }\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(LoginForm);\n","import React, { Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./SignUpForm.css\";\nimport {\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Container,\n  Col,\n  Button,\n  Alert\n} from \"reactstrap\";\n\nimport * as actionMethods from '../store/actions/index';\n\nclass SignUpForm extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    DOB: \"\",\n    email: \"\",\n    password: \"\",\n    msg: null,\n    dobErrorBorder: \"\",\n    dobErrorMessage: \"\",\n    emailErrorBorder: \"\",\n    emailErrorMessage: \"\",\n    passwordErrorBorder: \"\",\n    passwordErrorMessage: \"\"\n  };\n\n\n  componentDidUpdate(prevProps) {\n    const { error } = this.props;\n    if (error !== prevProps.error) {\n      //register error\n      if (error.id === \"REGISTER_FAIL\") {\n        if (error.msg.name === \"MongoError\") {\n          this.setState({ msg: \"User already exists!\" });\n        }\n      }\n    }\n  }\n\n  //Checks if all required fields have inputs. If so, then the submit button will be enabled.\n  requiredFieldsFilled() {\n    const { firstName, lastName, DOB, email, password } = this.state;\n    return (\n      firstName.length > 0 &&\n      lastName.length > 0 &&\n      DOB.length === undefined &&\n      email.length > 0 &&\n      password.length > 0\n    );\n  }\n\n  validateCases() {\n    //Email must include @uci.edu\n    if (this.state.email.split(\"@\")[1] !== \"uci.edu\") {\n      this.setState({\n        msg: \"Email must be UCI email.\",\n        emailErrorBorder: \"errorBorder\",\n        emailErrorMessage: \"errorMessage\"\n      });\n      return false;\n    }\n    //Password cannot contain 'password'\n    if (this.state.password.toLowerCase().includes(\"password\")) {\n      this.setState({\n        msg: \"Password cannot contain keyword: 'password'\",\n        passwordErrorBorder: \"errorBorder\",\n        passwordErrorMessage: \"errorMessage\"\n      });\n      return false;\n    }\n    //Minimum requirements for password\n    const regex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^\\w\\s]).{8,}$/;\n    if (!regex.test(this.state.password)) {\n      this.setState({\n        msg:\n          \"Password must meet the following requirements:\\n Minimum 8 characters including at least 1 digit, 1 uppercase letter, 1 lowercase letter, and 1 special character\",\n        passwordErrorBorder: \"errorBorder\",\n        passwordErrorMessage: \"errorMessage\"\n      });\n      return false;\n    }\n    //Check if age is over 13\n    const now = new Date();\n    if (now.getFullYear() - this.state.DOB.getFullYear() < 13) {\n      this.setState({\n        msg: \"Must be at least 13 years old to register.\",\n        dobErrorBorder: \"errorBorder\",\n        dobErrorMessage: \"errorMessage\"\n      });\n      return false;\n    }\n    return true;\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onChangeDate = e => {\n    const d = new Date(e.target.value);\n    this.setState({ [e.target.name]: d });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    //Set Error message to null.\n    this.props.handleClearErrors();\n    this.setState({\n      msg: null,\n      dobErrorBorder: \"\",\n      dobErrorMessage: \"\",\n      emailErrorBorder: \"\",\n      emailErrorMessage: \"\",\n      passwordErrorBorder: \"\",\n      passwordErrorMessage: \"\"\n    });\n\n    //Check if user inputs are valid\n    const valid = this.validateCases();\n    const { firstName, lastName, DOB, email, password } = this.state;\n\n    //New user created\n    const newUser = {\n      firstName,\n      lastName,\n      DOB,\n      email,\n      password\n    };\n\n    //Send new user object to register action and JSON request body\n    if (valid) {\n      this.props.handleRegisterUser(newUser);\n    }\n  };\n\n  render() {\n    const submitButtonEnable = this.requiredFieldsFilled();\n    return (\n      <div className=\"styles\">\n        <Container>\n          <div className=\"row\">\n            <Col md=\"2\"></Col>\n            <Col md=\"8\">\n              <div className=\"signUpContain\">\n                {this.state.msg ? (\n                  <Alert color=\"danger\">{this.state.msg}</Alert>\n                ) : null}\n                <Form onSubmit={this.onSubmit}>\n                  <FormGroup row>\n                    <Col>\n                      <Label\n                        className=\"d-flex justify-content-start\"\n                        for=\"firstName\"\n                      >\n                        First Name\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        name=\"firstName\"\n                        id=\"firstName\"\n                        onChange={this.onChange}\n                        placeholder=\"First Name\"\n                      />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup row>\n                    <Col>\n                      <Label\n                        className=\"d-flex justify-content-start\"\n                        for=\"lastName\"\n                      >\n                        Last Name\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        name=\"lastName\"\n                        id=\"lastName\"\n                        onChange={this.onChange}\n                        placeholder=\"Last Name\"\n                      />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup row>\n                    <Col>\n                      <Label\n                        className={`d-flex justify-content-start ${this.state.dobErrorMessage}`}\n                        for=\"enteredDate\"\n                      >\n                        Date of Birth\n                      </Label>\n                      <Input\n                        className={this.state.dobErrorBorder}\n                        type=\"date\"\n                        name=\"DOB\"\n                        id=\"enteredDate\"\n                        max=\"9999-12-31\"\n                        onChange={this.onChangeDate}\n                      />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup row>\n                    <Col>\n                      <Label\n                        className={`d-flex justify-content-start ${this.state.emailErrorMessage}`}\n                        for=\"uciEmail\"\n                      >\n                        Email\n                      </Label>\n                      <Input\n                        type=\"email\"\n                        className={this.state.emailErrorBorder}\n                        name=\"email\"\n                        id=\"uciEmail\"\n                        onChange={this.onChange}\n                        placeholder=\"Enter UCI email\"\n                      />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup row>\n                    <Col>\n                      <Label\n                        className={`d-flex justify-content-start ${this.state.passwordErrorMessage}`}\n                        for=\"userPassword\"\n                      >\n                        Password\n                      </Label>\n                      <Input\n                        className={this.state.passwordErrorBorder}\n                        type=\"password\"\n                        name=\"password\"\n                        id=\"userPassword\"\n                        onChange={this.onChange}\n                        placeholder=\"Enter password\"\n                      />\n                      <p className=\"pwHint\">\n                        Must contain at least one upper case letter, one lower\n                        case letter, one number, and one special character\n                      </p>\n                    </Col>\n                  </FormGroup>\n                  <Button\n                    type=\"submit\"\n                    className=\"d-flex justify-content-start\"\n                    disabled={!submitButtonEnable}\n                    action=\"/\"\n                  >\n                    Register\n                  </Button>\n                </Form>\n              </div>\n            </Col>\n            <Col xs=\"2\"></Col>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = state => ({\n  // TEMPLATE\n  // propYouWantInserted : state.ItemName,\n  authAction: state.auth,\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nconst mapDispatchToProps = dispatch => {\n  // TEMPLATE\n  // dispatchName: Parameter =>\n  //   dispatch({ type: \"ActionName\", Parameter }),\n  return {\n    handleRegisterUser: (newUser) => dispatch(actionMethods.register(newUser)),\n    handleClearErrors: () => dispatch(actionMethods.clearErrors())\n  }\n};\n\nexport default connect(\n  mapStatetoProps,\n  mapDispatchToProps\n)(SignUpForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./SignUpLandingLayout.css\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport SignUpForm from \"./SignUpForm.js\";\nimport { Alert, Button } from \"reactstrap\";\nimport { USER_DISMISSED_VERIFICATION_WARNING } from \"../store/actions/actionTypes\";\n\nclass SignUpLandingLayout extends Component {\n  render() {\n    return (\n      <div className=\"pageBackground\">\n        <div id=\"SignUpLandingContainer\" className=\"container-fluid\">\n          <Row>\n            {this.props.authAction.showVerificationWarning ? (\n            <Alert\n              id=\"showVerifyWarningAlert\"\n              onClick={this.props.handleOnClickShowVerifyMessage}\n              color=\"warning\"\n            >\n              {\n                \"Check your email for a confirmation link. (click this to close)\"\n              }\n            </Alert>\n            ) : null}\n          </Row>\n          <Container className=\"nonFluidContainer\">\n            <Row>\n              <Col md=\"5\">\n                <h1 id=\"othHeaderTitle\">Built for Anteaters</h1>\n                <h5\n                  style={{\n                    fontWeight: \"400\",\n                    fontSize: \"1.1rem\",\n                    marginBottom: \"2rem\"\n                  }}\n                >\n                  On The House makes it easier to connect with peers who are in\n                  need of housing.\n                </h5>\n                <h5\n                  style={{\n                    fontWeight: \"400\",\n                    fontSize: \"1.1rem\",\n                    marginBottom: \"2rem\"\n                  }}\n                >\n                  Currently the #1 source to accommodate housing for UCI\n                  students!\n                </h5>\n                <h5 style={{ fontWeight: \"400\", fontSize: \"1.1rem\" }}>\n                  \"Thanks to On The House, my subleasing process has been made\n                  easier!\" -Current UCI grad student\n                </h5>\n              </Col>\n              <Col md=\"7\">\n                <SignUpForm />\n              </Col>\n            </Row>\n            <Row>\n              <Col style={{ marginBottom: \"2rem\" }} md=\"12\"></Col>\n            </Row>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  // TEMPLATE\n  // propYouWantInserted : state.ItemName,\n  authAction: state.auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleOnClickShowVerifyMessage: () =>\n    dispatch({ type: USER_DISMISSED_VERIFICATION_WARNING })\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUpLandingLayout);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Home.css\";\nimport SignUpLandingLayout from \"./SignUpLandingLayout\";\nimport { Alert } from \"reactstrap\";\n\nimport {\n  USER_CONFIRMED_VERIFICATION\n} from \"../store/actions/actionTypes\";\n\nclass Home extends Component {\n  state = {\n    showVerifyMessge: false\n  };\n\n  render() {\n    return (\n      <div className=\"main\">\n        <SignUpLandingLayout />\n        {this.props.authAction.bypassVerify ? (\n          <Alert\n            id=\"verifySuccessAlert\"\n            onClick={this.props.handleOnClickBypassVerify}\n            color=\"success\"\n          >\n            {\"Your account is now verified! (click this to close)\"}\n          </Alert>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = state => ({\n  // TEMPLATE\n  // propYouWantInserted : state.ItemName,\n  authAction: state.auth,\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\nconst mapDispatchToProps = dispatch => ({\n  // TEMPLATE\n  // dispatchName: Parameter =>\n  //   dispatch({ type: \"ActionName\", Parameter }),\n\n  handleOnClickBypassVerify: () =>\n    dispatch({ type: USER_CONFIRMED_VERIFICATION })\n});\n\nexport default connect(\n  mapStatetoProps,\n  mapDispatchToProps\n)(Home);\n","import React from 'react';\nimport \"./ModalBackground.css\";\n\nconst ModalBackground = props => <div className=\"modalBackground\" data-keyboard=\"false\"></div>\n\nexport default ModalBackground;\n","import React from 'react';\nimport './NewPostModal.css';\nimport { Button } from 'reactstrap';\n\nconst NewPostModal = props => (\n    <div className = 'newPostModal'>\n        <header className=\"modal_header\"><h1>{props.title}</h1></header>\n        <section className=\"modal_content\"></section>\n            {props.children}\n        <section className=\"modal_actions\">\n            {props.canCancel && <Button className=\"cancel_btn\" color=\"danger\" onClick={props.handleCancel}>Cancel</Button>}\n            {props.canConfirm && <Button className=\"buttonColor\" disabled={props.handleDisabled} onClick={props.handleClickPost}>Post</Button>}\n        </section>\n    </div>\n);\n\n\n\n\nexport default NewPostModal;","import React from 'react';\nimport './UpdateModal.css';\nimport { Button } from 'reactstrap';\n\nconst UpdatePostModal = props => (\n    <div className = 'newUpdateModal'>\n        <header className=\"modal_header\"><h1>{props.title}</h1></header>\n        <section className=\"modal_content\"></section>\n            {props.children}\n        <section className=\"modal_actions\">\n            {props.canCancel && <Button className=\"cancel_btn\" color=\"danger\" onClick={props.handleCancel}>Cancel</Button>}\n            {props.canConfirm && <Button className=\"buttonColor\" disabled={props.handleDisabled} onClick={props.handleClickPost}>Update</Button>}\n        </section>\n    </div>\n);\n\n\nexport default UpdatePostModal;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Media, Alert, Button } from \"reactstrap\";\nimport ModalBackground from \"./ModalBackground\";\nimport NewPostModal from \"./NewPostModal\";\nimport UpdatePostModal from \"./UpdateModal\";\nimport image from \"../images/image.jpg\";\nimport axios from \"axios\";\nimport * as actionMethods from \"../store/actions/index\";\nimport { Link } from \"react-router-dom\";\nimport \"./PostTable.css\";\nimport Moment from \"react-moment\";\n\nclass PostTable extends Component {\n  state = {\n    posts: [],\n    postId: \"\",\n    title: \"\",\n    description: \"\",\n    community: \"\",\n    price: null,\n    showInvalidPriceWarning: false,\n    errmsg: \"\",\n    showPostModal: false,\n    showUpdateModal: false\n  };\n\n  //Checks if all required fields have inputs. If so, then the submit button will be enabled.\n  requiredFieldsFilled() {\n    const { title, description, community } = this.state;\n    return (\n      title.length > 0 &&\n      description.length > 0 &&\n      community.length > 0 &&\n      community !== \"Communities\"\n    );\n  }\n\n  validateCases() {\n    if (this.state.price < 100 || this.state.price > 10000) {\n      this.setState({\n        errmsg: \"The price range must be within $100 and $10000\"\n      });\n      return false;\n    }\n    return true;\n  }\n\n  getPostData(postID) {\n    return this.state.posts.filter(item => item._id === postID);\n  }\n\n  componentDidMount() {\n    this.PostsToState();\n  }\n\n  componentDidUpdate(){\n    this.PostsToState();\n  }\n  PostsToState() {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        crossDomain: true,\n        Authorization: `Bearer ${this.props.token}`\n      }\n    };\n\n    // TODO: Use API's sortBy.\n    // TODO: Handle 0 posts, errors gracefully.\n    const body = JSON.stringify({});\n    try {\n      axios.post(\"/posts/getPosts\", body, config).then(res => {\n        this.setState({\n          posts: res.data.sort(\n            (a, b) => new Date(b.updatedAt) - new Date(a.updatedAt)\n          )\n        });\n      });\n    } catch (e) {}\n  }\n\n  updatePosts(postID) {\n    this.setState({\n      ...this.state,\n      posts: this.state.posts.filter(item => item._id !== postID)\n    });\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  priceOnChange = e => {\n    this.setState({ [e.target.name]: Number(e.target.value) });\n  };\n\n  //When user activates new post modal\n  handleNewPostOnClick = e => {\n    this.setState({ showPostModal: true });\n  };\n\n  //User here cancels the new post modal\n  handleCancelButton = e =>\n    this.setState({\n      postId: \"\",\n      title: \"\",\n      description: \"\",\n      community: \"\",\n      price: null,\n      showInvalidPriceWarning: false,\n      errmsg: \"\",\n      showPostModal: false\n    });\n\n  //User clicks post to the new post modal\n  handlePostButton = e => {\n    e.preventDefault();\n\n    //clear errors\n    this.setState({\n      price: null,\n      showInvalidPriceWarning: false,\n      errmsg: \"\"\n    });\n\n    //Check to see if fields are valid\n    const valid = this.validateCases();\n\n    if (valid) {\n      const { title, description, community, price } = this.state;\n      const newPostObject = {\n        title,\n        description,\n        community,\n        price\n      };\n      this.props.handleCreateNewPost(newPostObject, this.props.token);\n      this.setState({ showPostModal: false });\n    }\n  };\n\n  //When user activates update post modal\n  handleUpdatePostOnClick = e => {\n    this.setState({ showUpdateModal: true });\n  };\n\n  //User here cancels the update post modal\n  handleUpdateCancelButton = e =>\n    this.setState({\n      postId: \"\",\n      title: \"\",\n      description: \"\",\n      community: \"\",\n      price: null,\n      showInvalidPriceWarning: false,\n      errmsg: \"\",\n      showUpdateModal: false\n    });\n\n  //User clicks post to the update post modal\n  handleUpdateButton = e => {\n    e.preventDefault();\n\n    //clear errors\n    this.setState({\n      price: null,\n      showInvalidPriceWarning: false,\n      errmsg: \"\"\n    });\n\n    //Check to see if fields are valid\n    const valid = this.validateCases();\n\n    if (valid) {\n      const { title, description, community, price } = this.state;\n      const newPostObject = {\n        title,\n        description,\n        community,\n        price\n      };\n      this.props.handleUpdatePost(\n        newPostObject,\n        this.state.postId,\n        this.props.token\n      );\n      this.setState({ showUpdateModal: false });\n    }\n  };\n\n  render() {\n    const createPostButtonEnable = this.requiredFieldsFilled();\n    return (\n      <React.Fragment>\n        {this.state.showPostModal && <ModalBackground />}\n        {this.state.showPostModal && (\n          <NewPostModal\n            title=\"Create a Post\"\n            handleClickPost={this.handlePostButton}\n            handleCancel={this.handleCancelButton}\n            handleDisabled={!createPostButtonEnable}\n            canCancel\n            canConfirm\n          >\n            {this.state.errmsg && (\n              <Alert color=\"danger\">{this.state.errmsg}</Alert>\n            )}\n\n            <form>\n              <div className=\"form-styles\">\n                <label htmlFor=\"titleText\">Title</label>\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  id=\"titleText\"\n                  className=\"modalTextField\"\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-styles\">\n                <label htmlFor=\"priceForm\">Price</label>\n                <input\n                  type=\"number\"\n                  name=\"price\"\n                  id=\"priceForm\"\n                  className=\"modalTextField\"\n                  min=\"100.00\"\n                  max=\"10000.00\"\n                  step=\"1.00\"\n                  placeholder=\"100.00\"\n                  onChange={this.priceOnChange}\n                ></input>\n              </div>\n              <div className=\"form-styles\">\n                <label htmlFor=\"descriptionText\">Description</label>\n                <textarea\n                  id=\"descriptionText\"\n                  className=\"modalTextField\"\n                  name=\"description\"\n                  rows=\"4\"\n                  onChange={this.onChange}\n                ></textarea>\n              </div>\n              <div className=\"form-styles community-styles\">\n                <label htmlFor=\"selectCommunity\">Select Community</label>\n                <select\n                  id=\"selectCommunity\"\n                  name=\"community\"\n                  onChange={this.onChange}\n                  defaultValue=\"Communities\"\n                >\n                  <option>Communities</option>\n                  <option>Ambrose</option>\n                  <option>Arroyo Vista</option>\n                  <option>Berkeley Court</option>\n                  <option>Camino Del Sol</option>\n                  <option>Campus Village</option>\n                  <option>Columbia Court</option>\n                  <option>Cornell Court</option>\n                  <option>Dartmouth Court</option>\n                  <option>Harvard Court</option>\n                  <option>Palo Verde</option>\n                  <option>Plaza Verde</option>\n                  <option>Puerta del Sol</option>\n                  <option>Stanford Court</option>\n                  <option>Verano Place</option>\n                  <option>Vista Del Campo</option>\n                  <option>Vista Del Campo Norte</option>\n                </select>\n              </div>\n            </form>\n          </NewPostModal>\n        )}\n\n        {this.state.showUpdateModal && <ModalBackground />}\n        {this.state.showUpdateModal && (\n          <UpdatePostModal\n            title=\"Update a Post\"\n            handleClickPost={this.handleUpdateButton}\n            handleCancel={this.handleUpdateCancelButton}\n            handleDisabled={!createPostButtonEnable}\n            canCancel\n            canConfirm\n          >\n            {this.state.errmsg && (\n              <Alert color=\"danger\">{this.state.errmsg}</Alert>\n            )}\n\n            <form>\n              <div className=\"form-styles\">\n                <label htmlFor=\"titleText\">Title</label>\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  id=\"titleText\"\n                  className=\"modalTextField\"\n                  onChange={this.onChange}\n                  defaultValue={this.state.title}\n                ></input>\n              </div>\n              <div className=\"form-styles\">\n                <label htmlFor=\"priceForm\">Price</label>\n                <input\n                  type=\"number\"\n                  name=\"price\"\n                  id=\"priceForm\"\n                  className=\"modalTextField\"\n                  min=\"100.00\"\n                  max=\"10000.00\"\n                  step=\"1.00\"\n                  onChange={this.priceOnChange}\n                  defaultValue={this.state.price}\n                ></input>\n              </div>\n              <div className=\"form-styles\">\n                <label htmlFor=\"descriptionText\">Description</label>\n                <textarea\n                  id=\"descriptionText\"\n                  className=\"modalTextField\"\n                  name=\"description\"\n                  rows=\"4\"\n                  onChange={this.onChange}\n                  defaultValue={this.state.description}\n                ></textarea>\n              </div>\n              <div className=\"form-styles community-styles\">\n                <label htmlFor=\"selectCommunity\">Select Community</label>\n                <select\n                  id=\"selectCommunity\"\n                  name=\"community\"\n                  onChange={this.onChange}\n                  defaultValue={this.state.community}\n                >\n                  <option>Ambrose</option>\n                  <option>Arroyo Vista</option>\n                  <option>Berkeley Court</option>\n                  <option>Camino Del Sol</option>\n                  <option>Campus Village</option>\n                  <option>Columbia Court</option>\n                  <option>Cornell Court</option>\n                  <option>Dartmouth Court</option>\n                  <option>Harvard Court</option>\n                  <option>Palo Verde</option>\n                  <option>Plaza Verde</option>\n                  <option>Puerta del Sol</option>\n                  <option>Stanford Court</option>\n                  <option>Verano Place</option>\n                  <option>Vista Del Campo</option>\n                  <option>Vista Del Campo Norte</option>\n                </select>\n              </div>\n            </form>\n          </UpdatePostModal>\n        )}\n\n        <div className=\"PostDiv\">\n          <Button id=\"createPost\" onClick={this.handleNewPostOnClick}>\n            New Post\n          </Button>\n          {this.state.posts.map(item => (\n            <Media id=\"Post\" key={item[\"_id\"]}>\n              <Media left>\n                <Media object src={image} alt=\"No Image\" id=\"thumbnail\" />\n              </Media>\n              <Media body id=\"postText\">\n                <Media\n                  key={item[\"_id\"]}\n                  id=\"postTitle\"\n                  onClick={() =>\n                    this.props.handleaddPostData(\n                      this.getPostData(item[\"_id\"])[0]\n                    )\n                  }\n                  heading\n                  style={{ textDecoration: \"none\" }}\n                >\n                  <span id=\"postDate\">\n                    {<Moment format=\"MMM D\">{item[\"updatedAt\"]}</Moment>}\n                  </span>{\" \"}\n                  <Link to=\"/post\">{item[\"title\"]}</Link>\n                </Media>\n                <span id=\"postPrice\">{`$${item[\"price\"].$numberDecimal}`}</span>{\" \"}\n                <span id=\"postCommunity\">{`(${item[\"community\"]})`}</span>\n                {this.props.user._id === item[\"author\"] ||\n                this.props.user[\"admin\"] ? (\n                  <p>\n                    <Button\n                      id=\"deletePost\"\n                      onClick={() => {\n                        if (\n                          window.confirm(\n                            \"Are you sure you wish to delete your housing post?\"\n                          )\n                        ) {\n                          this.props.handleDeletePost(\n                            item[\"_id\"],\n                            this.props.token\n                          );\n                          this.updatePosts(item[\"_id\"]);\n                        }\n                      }}\n                    >\n                      DELETE\n                    </Button>\n                    {this.props.user._id === item[\"author\"] ? (\n                      <Button\n                        id=\"updatePost\"\n                        onClick={() => {\n                          this.setState({\n                            postId: item[\"_id\"],\n                            title: item[\"title\"],\n                            description: item[\"description\"],\n                            community: item[\"community\"],\n                            price: item[\"price\"].$numberDecimal\n                          })\n                          this.handleUpdatePostOnClick();\n                        }}\n                      >\n                        EDIT\n                      </Button>\n                    ) : null}\n                  </p>\n                ) : null}\n              </Media>\n            </Media>\n          ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStatetoProps = state => ({\n  token: state.auth.token,\n  user: state.auth.user\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleaddPostData: postContent =>\n      dispatch(actionMethods.addPostData(postContent)),\n    handleCreateNewPost: (theNewPost, localToken) =>\n      dispatch(actionMethods.createNewPost(theNewPost, localToken)),\n    handleUpdatePost: (theUpdatedPost, currPost, localToken) =>\n      dispatch(actionMethods.updatePost(theUpdatedPost, currPost, localToken)),\n    handleDeletePost: (postId, localToken) =>\n      dispatch(actionMethods.deletePost(postId, localToken))\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(PostTable);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport image from \"../images/image.jpg\";\nimport \"./Posts.css\";\nimport { Button, Table, Row, Col, Container, Alert, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport axios from \"axios\";\nimport * as actionMethods from \"../store/actions/index\";\nimport Moment from \"react-moment\";\nimport UpdatePostModal from \"./UpdateModal\";\nimport ModalBackground from \"./ModalBackground\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Posts extends Component {\n  state = {\n    comments: [],\n    content: \"\",\n    postId: \"\",\n    title: \"\",\n    description: \"\",\n    community: \"\",\n    price: null,\n    showInvalidPriceWarning: false,\n    errmsg: \"\",\n    showPostModal: false,\n    showUpdateModal: false\n  };\n\n  CommentsToState() {\n    const config = {\n      headers: {\n        crossDomain: true,\n        Authorization: `Bearer ${this.props.token}`\n      }\n    };\n    try {\n      axios.get(\"/comments/\" + this.props.postData._id, config).then(res => {\n        this.setState({\n          comments: res.data\n        });\n      });\n    } catch (e) {\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n\n  //Checks if all required fields have inputs. If so, then the submit button will be enabled.\n  requiredFieldsFilled() {\n    const { title, description, community } = this.state;\n    return (\n      title.length > 0 &&\n      description.length > 0 &&\n      community.length > 0 &&\n      community !== \"Communities\"\n    );\n  }\n\n\n  handleCommentButton = e => {\n    this.props.createNewComment(\n      this.props.postData._id,\n      this.state.content,\n      this.props.token\n    );\n    this.setState({ content: \"\" });\n  };\n\n  //When user activates update post modal\n  handleUpdatePostOnClick = e => {\n    this.setState({ showUpdateModal: true });\n  };\n\n  priceOnChange = e => {\n    this.setState({ [e.target.name]: Number(e.target.value) });\n  };\n\n\n  validateCases() {\n    if (this.state.price < 100 || this.state.price > 10000) {\n      this.setState({\n        errmsg: \"The price range must be within $100 and $10000\"\n      });\n      return false;\n    }\n    return true;\n  }\n\n\n  //User here cancels the update post modal\n  handleUpdateCancelButton = e =>\n    this.setState({\n      postId: \"\",\n      title: \"\",\n      description: \"\",\n      community: \"\",\n      price: null,\n      showInvalidPriceWarning: false,\n      errmsg: \"\",\n      showUpdateModal: false\n    });\n\n  //User clicks post to the update post modal\n  handleUpdateButton = e => {\n    e.preventDefault();\n\n    //clear errors\n    this.setState({\n      price: null,\n      showInvalidPriceWarning: false,\n      errmsg: \"\"\n    });\n\n    //Check to see if fields are valid\n    const valid = this.validateCases();\n\n    if (valid) {\n      const { title, description, community, price } = this.state;\n      const newPostObject = {\n        title,\n        description,\n        community,\n        price\n      };\n      this.props.handleUpdatePost(\n        newPostObject,\n        this.state.postId,\n        this.props.token\n      );\n      this.setState({ showUpdateModal: false });\n      this.props.history.push('/posttable');\n    }\n  };\n\n  componentDidMount() {\n    this.CommentsToState();\n  }\n\n  componentDidUpdate() {\n    this.CommentsToState();\n  }\n\n  toggle = () => this.setState({isOpen: !this.state.isOpen, dropdownOpen: !this.state.dropdownOpen});\n\n  render() {\n    const createPostButtonEnable = this.requiredFieldsFilled();\n    return (\n      <React.Fragment>\n        <Container fluid={true} id=\"wholePostWrapper\">\n          <Row>\n            <Col sm=\"6\">\n              <div id=\"postWrapper\">\n                <header>\n                  <h1 id=\"title\">\n                    {this.props.postData != null\n                      ? this.props.postData.title\n                      : null}\n                  </h1>\n                  <p id=\"poster\">\n                    {this.props.postData != null\n                      ? this.props.postData.name\n                      : null}\n                  </p>\n                  <p id=\"date\">\n                    {\n                      <Moment fromNow>\n                        {this.props.postData[\"updatedAt\"]}\n                      </Moment>\n                    }{\" \"}\n                  </p>\n\n                  {this.props.user._id === this.props.postData[\"author\"] ||\n                  this.props.user[\"admin\"] ? (\n                    <p>\n                      <Button\n                        id=\"deletePost\"\n                        onClick={() => {\n                          if (\n                            window.confirm(\n                              \"Are you sure you wish to delete your housing post?\"\n                            )\n                          ) {\n                            this.props.handleDeletePost(\n                              this.props.postData[\"_id\"],\n                              this.props.token\n                            );\n                            // <Redirect to='/posttable'></Redirect>\n                            this.props.history.push('/posttable');\n                          }\n                        }}\n                      >\n                        DELETE\n                      </Button>\n                      {this.props.user._id === this.props.postData[\"author\"] ? (\n                        <Button\n                          id=\"updatePost\"\n                          onClick={() => {\n                            this.setState({\n                              postId: this.props.postData[\"_id\"],\n                              title: this.props.postData[\"title\"],\n                              description: this.props.postData[\"description\"],\n                              community: this.props.postData[\"community\"],\n                              price: this.props.postData[\"price\"].$numberDecimal\n                            });\n                            this.handleUpdatePostOnClick();\n                          }}\n                        >\n                          EDIT\n                        </Button>\n                      ) : null}\n                    </p>\n                  ) : null}\n                </header>\n\n                <p id=\"description\">\n                  {this.props.postData != null\n                    ? this.props.postData.description\n                    : null}\n                </p>\n                <img id=\"postPicture\" src={image} alt=''></img>\n              </div>\n            </Col>\n            <Col sm=\"6\">\n              <div id=\"commentWrapper\">\n                <Table responsive=\"md\" borderless variant=\"true\">\n                  <tbody id=\"commentBody\">\n                    {this.state.comments &&\n                      this.state.comments.map(({ name, content, author, _id }, index) => ( \n                        <tr key={index}>\n                          <td id=\"author\">{name}</td>\n                          <td id=\"comment\">{content}</td>\n                          <td id=\"menu\">\n                            {this.props.user._id === author ||\n                            this.props.user[\"admin\"] ? (\n                              <UncontrolledDropdown>\n                                <DropdownToggle id=\"commentDropdown\">\n                                  <FontAwesomeIcon icon={faEllipsisV} id=\"commentEllipsis\"/>\n                                </DropdownToggle>\n                                <DropdownMenu>\n                                  <DropdownItem onClick = {() => \n                                    {this.props.deleteComment(\n                                      _id, \n                                      this.props.token)}}> Delete\n                                  </DropdownItem>\n                                </DropdownMenu>\n                              </UncontrolledDropdown>):null}\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n\n                <div id=\"commentTextBox\">\n                  <textarea\n                    id=\"commentTextField\"\n                    name=\"content\"\n                    rows=\"3\"\n                    value={this.state.content}\n                    onChange={this.onChange}\n                    maxLength=\"200\"\n                  ></textarea>\n                </div>\n\n                <Button\n                  id=\"postCommentButton\"\n                  onClick={() => {\n                    this.handleCommentButton();\n                  }}\n                >\n                  Post Comment\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n  \n\n        {this.state.showUpdateModal && <ModalBackground />}\n        {this.state.showUpdateModal && (\n          <UpdatePostModal\n            title=\"Update a Post\"\n            handleClickPost={this.handleUpdateButton}\n            handleCancel={this.handleUpdateCancelButton}\n            handleDisabled={!createPostButtonEnable}\n            canCancel\n            canConfirm\n          >\n            {this.state.errmsg && (\n              <Alert color=\"danger\">{this.state.errmsg}</Alert>\n            )}\n\n            <form>\n              <div className=\"form-styles\">\n                <label htmlFor=\"titleText\">Title</label>\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  id=\"titleText\"\n                  className=\"modalTextField\"\n                  onChange={this.onChange}\n                  defaultValue={this.state.title}\n                ></input>\n              </div>\n              <div className=\"form-styles\">\n                <label htmlFor=\"priceForm\">Price</label>\n                <input\n                  type=\"number\"\n                  name=\"price\"\n                  id=\"priceForm\"\n                  className=\"modalTextField\"\n                  min=\"100.00\"\n                  max=\"10000.00\"\n                  step=\"1.00\"\n                  onChange={this.priceOnChange}\n                  defaultValue={this.state.price}\n                ></input>\n              </div>\n              <div className=\"form-styles\">\n                <label htmlFor=\"descriptionText\">Description</label>\n                <textarea\n                  id=\"descriptionText\"\n                  className=\"modalTextField\"\n                  name=\"description\"\n                  rows=\"3\"\n                  onChange={this.onChange}\n                  defaultValue={this.state.description}\n                ></textarea>\n              </div>\n              <div className=\"form-styles\">\n                <label htmlFor=\"selectCommunity\">Select Community</label>\n                <select\n                  id=\"selectCommunity\"\n                  name=\"community\"\n                  onChange={this.onChange}\n                  defaultValue={this.state.community}\n                >\n                  <option>Ambrose</option>\n                  <option>Arroyo Vista</option>\n                  <option>Berkeley Court</option>\n                  <option>Camino Del Sol</option>\n                  <option>Campus Village</option>\n                  <option>Columbia Court</option>\n                  <option>Cornell Court</option>\n                  <option>Dartmouth Court</option>\n                  <option>Harvard Court</option>\n                  <option>Palo Verde</option>\n                  <option>Plaza Verde</option>\n                  <option>Puerta del Sol</option>\n                  <option>Stanford Court</option>\n                  <option>Verano Place</option>\n                  <option>Vista Del Campo</option>\n                  <option>Vista Del Campo Norte</option>\n                </select>\n              </div>\n            </form>\n          </UpdatePostModal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStatetoProps = state => ({\n  token: state.auth.token,\n  user: state.auth.user,\n  postData: state.post.postData\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteComment: (currUser, localToken) =>\n      dispatch(actionMethods.deleteComment(currUser, localToken)),\n    createNewComment: (postId, currUser, comment, localToken) =>\n      dispatch(actionMethods.createNewComment(postId, currUser, comment, localToken)),\n    handleUpdatePost: (theUpdatedPost, currPost, localToken) =>\n      dispatch(actionMethods.updatePost(theUpdatedPost, currPost, localToken)),\n    handleDeletePost: (postId, localToken) =>\n      dispatch(actionMethods.deletePost(postId, localToken))\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Posts);\n","import  {NEW_COMMENT_SUCCESS, NEW_COMMENT_FAIL} from './actionTypes';\nimport axios from 'axios';\n\n//Create new comment\nexport const createNewComment = ( post, content, userToken) => dispatch => {\n\nconst config = {\n  headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: `Bearer ${userToken}`\n    }\n};\n\n//Request Body\nlet body = JSON.stringify({ post, content });\n\naxios.post('/comments/createComment', body, config)\n.then(res => {\n  dispatch({\n      type: NEW_COMMENT_SUCCESS,\n      payload: res.data\n  })\n})\n.catch( err => {\n  dispatch( {type: NEW_COMMENT_FAIL} )\n})\n}\n\n//Delete comment\nexport const deleteComment = (commentId, userToken) => dispatch => {\n  const config = {\n    headers: {\n        \"Content-type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        crossDomain: true,\n        Authorization: `Bearer ${userToken}`\n      }\n  };\n  console.log(commentId);\n  console.log(userToken);\n  axios.delete(`/comments/${commentId}`, config)\n  .then(res => {\n  })\n}","import React, { useState } from \"react\";\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from \"reactstrap\";\n\nimport \"./Carousel.css\";\n\nconst items = [\n  {\n    src:\n      \"http://ktgy.com/wp-content/uploads/2017/08/Plaza-Verde-UCI-American-Campus-Communities-Undergraduate-Student-Housing-KTGY-16-2000x1335.jpg\",\n    altText: \"Plaza Verde\",\n    caption: \"Plaza Verde\"\n  },\n  {\n    src:\n      \"http://ktgy.com/wp-content/uploads/2015/11/UC-Irvine-Puerta-del-Sol_00-5_-2000x1260.jpg\",\n    altText: \"Puerta Del Sol\",\n    caption: \"Puerta Del Sol\"\n  },\n  {\n    src:\n      \"https://static.wixstatic.com/media/6098a4_dd706b2c3a1f4495960ef27a7b581b6c.jpg\",\n    altText: \"Vista Del Campo Norte\",\n    caption: \"Vista Del Campo Norte\"\n  },\n  {\n    src:\n      \"http://ktgy.com/wp-content/uploads/2015/11/UC-Irvine-Camino-del-Sol_00-4-2000x1332.jpg\",\n    altText: \"Camino Del Sol\",\n    caption: \"Camino Del Sol\"\n  },\n  {\n    src:\n      \"https://static.wixstatic.com/media/47443b_3504201c6bec4f37a93314ae1e356b2c.jpg\",\n    altText: \"Vista Del Campo\",\n    caption: \"Vista Del Campo\"\n  }\n];\n\nconst Example = props => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const goToIndex = newIndex => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  const slides = items.map(item => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img className=\"d-block w-100\" src={item.src} alt={item.altText} />\n        <CarouselCaption captionText={item.caption} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel activeIndex={activeIndex} next={next} previous={previous}>\n      <CarouselIndicators\n        items={items}\n        activeIndex={activeIndex}\n        onClickHandler={goToIndex}\n      />\n      {slides}\n      <CarouselControl\n        direction=\"prev\"\n        directionText=\"Previous\"\n        onClickHandler={previous}\n      />\n      <CarouselControl\n        direction=\"next\"\n        directionText=\"Next\"\n        onClickHandler={next}\n      />\n    </Carousel>\n  );\n};\n\nexport default Example;\n","import React, { Component } from \"react\";\nimport \"./About.css\";\nimport Carousel from \"./Carousel\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div id=\"space\">\n        <Carousel />\n        <div id=\"body-text\">\n          Every year there are many students who are unable to find housing, at\n          On The House we aim to fix this. On The House is a service that allows\n          students to sublease their properties through creating personalized\n          posts. Here, students can connect with the corresponding subleasers to\n          continue the process of subleasing privately. We are dedicated to\n          helping you find your new home!\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actionMethods from '../../store/actions/index';\n\nclass VerificationStatus extends Component {\n  componentDidMount() {\n    const userToken = this.props.location.search.split(\"=\")[1];\n    const tokenToRequest = \"Bearer \" + userToken;\n    this.props.handleVerify(tokenToRequest);\n  }\n  render() {\n    const styles = {\n      marginTop: \"150px\"\n    };\n\n    const verifiedRedirect = (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    );\n\n    return (\n      <div style={styles}>\n        {this.props.bypassVerify ? (\n          verifiedRedirect\n        ) : (\n          <div>\n            <h1>Verification status pending</h1>\n            <Link to=\"/\">Return to Homepage</Link>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = state => ({\n  // TEMPLATE\n  // propYouWantInserted : state.ItemName,\n  authAction: state.auth,\n  bypassVerify: state.auth.bypassVerify,\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nconst mapDispatchToProps = dispatch => {{\n  // TEMPLATE\n  // dispatchName: Parameter =>\n  //   dispatch({ type: \"ActionName\", Parameter }),\n  return {\n    handleVerify: (tokenToConfirm) => dispatch(actionMethods.verify(tokenToConfirm)),\n  }\n}};\n\nexport default connect(\n  mapStatetoProps,\n  mapDispatchToProps,\n)(VerificationStatus);\n","import React from \"react\";\nimport { Route, Redirect }  from 'react-router-dom';\nimport { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\n\n// const propTypes = {\n//     isAuthenticated: PropTypes.bool,\n//     error: PropTypes.object.isRequired,\n//     register: PropTypes.func.isRequired,\n//     clearErrors: PropTypes.func.isRequired,\n//     userObject: PropTypes.object.isRequired\n//   }\n\n\nconst PrivateRoute = ({ isAuthenticated, userObject, redirect, component:Component, ...rest}) => (\n    <Route\n        {...rest}\n        render={props => {\n            if (isAuthenticated)\n            {\n                return (\n                    (<Component {...props} />)\n                )   \n            }\n            else{\n                return (\n                    <Redirect to= {{\n                        pathname: redirect,\n                        // state: { from: props.location }\n                        }}\n                    />        \n                )\n            }\n        }\n        }\n    />\n);\n\n\nconst mapStatetoProps = state => ({\n    // TEMPLATE\n    // propYouWantInserted : state.ItemName,\n    authAction: state.auth,\n    isAuthenticated: state.auth.isAuthenticated,\n    userObject: state.auth.user,\n    error: state.error\n  });\n\n\nexport default connect(\n    mapStatetoProps,\n)(PrivateRoute);\n","import React from \"react\";\nimport { Route, Redirect }  from 'react-router-dom';\nimport { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\n\n// const propTypes = {\n//     isAuthenticated: PropTypes.bool,\n//     error: PropTypes.object.isRequired,\n//     register: PropTypes.func.isRequired,\n//     clearErrors: PropTypes.func.isRequired,\n//     userObject: PropTypes.object.isRequired\n//   }\n\n\nconst HomeRoute = ({ isAuthenticated, userObject, redirect, component:Component, ...rest}) => (\n    <Route\n        {...rest}\n        render={props => {\n            if (!isAuthenticated)\n            {\n                return (\n                    (<Component {...props} />)\n                )   \n            }\n            else{\n                return (\n                    <Redirect to= {{\n                        pathname: redirect,\n                        // state: { from: props.location }\n                        }}\n                    />        \n                )\n            }\n        }\n        }\n    />\n);\n\n\nconst mapStatetoProps = state => ({\n    // TEMPLATE\n    // propYouWantInserted : state.ItemName,\n    authAction: state.auth,\n    isAuthenticated: state.auth.isAuthenticated,\n    userObject: state.auth.user,\n    error: state.error\n  });\n\n\nexport default connect(\n    mapStatetoProps,\n)(HomeRoute);\n","import React, { Component } from \"react\";\nimport DocumentTitle from \"react-document-title\";\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\nimport LoginForm from \"../components/LoginForm\";\nimport Home from \"../components/Home\";\nimport PostTable from \"../components/PostTable\";\nimport Posts from \"../components/Posts\";\nimport About from \"../components/About\";\nimport VerificationStatus from \"../components/VerificationPage/VerificationStatus\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport HomeRoute from \"./HomeRoute\";\n\nclass AllRouters extends Component {\n  redirectToPostTable = e => {\n    return <Redirect to=\"/posttable\" />;\n  };\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <NavBar></NavBar>\n          <DocumentTitle title=\"On The House\"></DocumentTitle>\n          <Switch>\n            <HomeRoute exact path=\"/\" component={Home} redirect=\"/posttable\"/>\n            <Route exact path=\"/about\" component={About} />\n            <Route path=\"/verify\" component={VerificationStatus} />\n            <Route exact path=\"/users/login\" component={LoginForm} />\n            <PrivateRoute path=\"/posttable\" component={PostTable}  redirect=\"/users/login\"/>\n            {this.props.user && <Route exact path=\"/post\" component={Posts} />}\n            <Redirect to=\"/\" />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = state => ({\n  token: state.auth.token,\n  user: state.auth.user\n});\n\nexport default connect(mapStatetoProps)(AllRouters);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { loadUser } from './store/actions/authActions';\nimport store from './index';\nimport AllRouters from \"./routers/Routers\";\n\nclass App extends Component { \n  componentDidMount() {\n    store.dispatch(loadUser());\n  } \n  render() {\n    return (\n      <div className=\"App\">\n        <AllRouters />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/actionTypes';\n\nconst initialState = {\n    msg: {},\n    status: null,\n    id: null \n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case GET_ERRORS:\n            return {\n                msg: action.payload.msg,\n                status: action.payload.status,\n                id: action.payload.id\n            }\n        case CLEAR_ERRORS:\n            return {\n                msg: {},\n                status: null,\n                id: null\n            }\n        default:\n            return state; \n\n    }\n}","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  VERIFICATION_SUCCESS,\n  USER_CONFIRMED_VERIFICATION,\n  USER_DISMISSED_VERIFICATION_WARNING\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: false,\n  bypassVerify: null,\n  showVerificationWarning: false,\n  isLoading: false,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        bypassVerify: null\n      };\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        // isAuthenticated: true,\n        isLoading: false,\n        bypassVerify: null,\n        showVerificationWarning: true\n      };\n    case VERIFICATION_SUCCESS:\n      return {\n        ...state,\n        bypassVerify: true,\n        isLoading: false\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        bypassVerify: null\n      };\n    case USER_CONFIRMED_VERIFICATION:\n      return {\n        ...state,\n        bypassVerify: false\n      };\n    case USER_DISMISSED_VERIFICATION_WARNING:\n      return {\n        ...state,\n        showVerificationWarning: false\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n    ADD_POST_DATA,\n    NEW_POST_SUCCESS,\n    NEW_POST_FAIL,\n    UPDATE_POST_SUCCESS,\n    UPDATE_POST_FAIL\n} from '../actions/actionTypes';\n\nconst initialState = {\n    postData: null\n};\n\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case ADD_POST_DATA:\n        case NEW_POST_SUCCESS:\n        case UPDATE_POST_SUCCESS:\n            return {\n                ...state,\n                postData: action.postData\n            }\n        case NEW_POST_FAIL:\n        case UPDATE_POST_FAIL:\n        default:\n            return state;\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport errorReducer from './store/reducers/errorReducer';\nimport authReducer from './store/reducers/authReducer';\nimport postReducer from './store/reducers/postReducer';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://dev-oth-api.herokuapp.com/';\n\nconst middleWare = [thunk];\n\nconst allReducers = combineReducers({\n  error: errorReducer,\n  auth: authReducer,\n  post: postReducer\n});\n\nconst store = createStore(\n    allReducers,\n    composeWithDevTools(applyMiddleware(...middleWare))\n);\n  \nexport default store;\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n  \n  ","module.exports = __webpack_public_path__ + \"static/media/image.33ee9ff6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/OnTheHouseLogo.6c23a8dc.png\";"],"sourceRoot":""}